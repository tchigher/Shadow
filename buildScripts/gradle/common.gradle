def gitShortRev() {
    def gitCommit = ""
    def proc = "git rev-parse --short HEAD".execute()
    proc.in.eachLine { line -> gitCommit = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    return gitCommit
}

allprojects {
    ext.COMPILE_SDK_VERSION = 30
    ext.MIN_SDK_VERSION = 19
    ext.TARGET_SDK_VERSION = 28
    ext.VERSION_CODE = 1
    ext.VERSION_NAME = "2.0.12"
    if ("${System.env.PUBLISH_RELEASE}".equalsIgnoreCase("true")) {
        ext.VERSION_SUFFIX = ""
    } else if ("${System.env.ORANGE}".equalsIgnoreCase("true")) {
        ext.VERSION_SUFFIX = "-${System.env.ORANGE_COMMIT_SHORT}-SNAPSHOT"
    } else {
        ext.VERSION_SUFFIX = "-${gitShortRev()}-SNAPSHOT"
    }
    ext.ARTIFACT_VERSION = ext.VERSION_NAME + ext.VERSION_SUFFIX
    ext.SAMPLE_HOST_APP_APPLICATION_ID = 'com.cmvideo.migumovie'

    ext {
        buildTools = "29.0.3"
        compileSdk = 28
        minSdk = 19
        targetSdk = 28
        androidSupport = "28.0.0"
        arouterApi = "1.4.1"
        arouterCompiler = "1.2.2"
        kotlin = "1.4.21"
        retrofit = "2.7.2"
        rxJava = "3.0.1"
        rxAndroid = "3.0.0"
        eventBus = "3.2.0"
        okHttp = "3.12.10"
    }

    repositories {
//        google()
//        jcenter()
        maven {
            url = uri("https://dl.bintray.com/wangpengwen/kt/")
            content {
                includeGroup("com.mg.widgets")
            }
        }

        maven {
            url = uri("http://maven.aliyun.com/nexus/content/groups/public/")
            content {
                excludeGroupByRegex("""com\\.mg.widgets.*""")
            }
        }
        mavenCentral {
            content {
                excludeGroupByRegex("""com\\.mg.widgets.*""")
            }
        }
        google {
            content {
                includeGroupByRegex("com.android.*")
                includeGroupByRegex("android.arch.*")// androidx.databinding
                includeGroupByRegex("androidx.*")//
            }
        }
        maven {
            url = uri("https://jitpack.io")
            content {
                excludeGroupByRegex("""com\\.mg.widgets.*""")
            }
        }
        maven {
            url = uri("http://mvn.gt.igexin.com/nexus/content/repositories/releases/")
            content {
                excludeGroupByRegex("""com\\.mg.widgets.*""")
            }
        }
        maven {
            url = uri("https://dl.bintray.com/umsdk/release")
            content {
                excludeGroupByRegex("""com\\.mg.widgets.*""")
            }
        }
        jcenter {
            content {
                excludeGroupByRegex("""com\\.mg.widgets.*""")
            }
        }
    }
    //环境检查
    envCheck()

    configurations.all {
        resolutionStrategy.dependencySubstitution {
            substitute module("androidx.annotation:annotation") with module("com.android.support:support-annotations:28.0.0")
        }
    }

}


def envCheck(){
    //优化错误提示，不然会出现代码中找不到android依赖的问题
    def jarFile = file("${System.getenv().get('ANDROID_HOME')}/platforms/android-${project.COMPILE_SDK_VERSION}/android.jar")

    if(!jarFile.exists()){
        throw new RuntimeException("Missing SDK Platform Android，API ${project.COMPILE_SDK_VERSION}。请确保以下文件存在: ${jarFile.absolutePath}")
    }
}